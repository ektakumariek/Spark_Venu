package com.training.dataframes

import org.apache.spark.sql.SparkSession

import org.apache.spark.sql.functions.desc

object Aaadhar_assignment {

  def main(args: Array[String]): Unit = {

    val spark = SparkSession.builder().master("local[*]").appName("Real_Estate").getOrCreate()

    val sc = spark.sparkContext

    val input2 = "file:///Users/ekumari/Desktop/Ektafolder/Venu Class/Dataset/UIDAI-ENR-DETAIL-20170308.csv"

    val df2 = spark.read.format("csv").option("header", "True").load(input2)


    //assgn 1) top 10 districts with maximum Aadhaar's generated for both Male and Female

    df2.show(40)

    val res=df2.withColumn("Aadhaar generated",df2("Aadhaar generated").cast("int") )

    val resMax= res.groupBy("District").sum("Aadhaar generated").sort(desc("sum(Aadhaar generated)"))

    resMax.show(10)



    //assgn 2) Total Aadhaar's generated by each enrolment agency

    val resTotal= res.groupBy("Enrolment Agency").sum("Aadhaar generated").orderBy("Enrolment Agency")


    resTotal.show()


    //3) Total Aadhaar's generated for each state

    val resState= res.groupBy("State").sum("Aadhaar generated").sort(desc("sum(Aadhaar generated)"))

    resState.show(10)



    //4) from wich state most of the citizen available who is more than 60 years old list out top ten states.

    val age60=res.where("Age>60").orderBy(desc("Age"))

    age60.show()


    //5) From which Enrolment Agency most of the aadhar card records enrolled? listout top 10

    val maxEnrollment= res.groupBy("Enrolment Agency").sum("Aadhaar generated").orderBy(desc("sum(Aadhaar generated)"))


    maxEnrollment.show()



  }

}
